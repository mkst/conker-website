{"version":3,"sources":["components/RenderIf/index.js","components/MenuItem/index.js","components/GitHub/index.js","components/Menu/index.js","panels/Info/index.js","panels/Faq/index.js","plots/CurrentProgress/index.js","plots/HistoricProgress/index.js","panels/Progress/index.js","pages/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["RenderIf","condition","children","MenuItem","item","active","onClick","activeClass","className","GitHub","url","href","alt","target","rel","icon","faGithub","Menu","activePanelHook","activePanel","setActivePanel","InfoPanel","FaqPanel","CurrentProgressPlot","data","version","section","useState","plotData","setPlotData","plot","setPlot","useEffect","Object","keys","indexOf","i","progress","length","sections","j","c","c_functions","percent","total","total_functions","title","toFixed","values","labels","type","hole","textinfo","marker","colors","domain","row","column","direction","sort","name","layout","font","family","size","color","grid","rows","columns","margin","showlegend","paper_bgcolor","plot_bgcolor","hovermode","config","displayModeBar","responsive","style","width","height","HistoricProgressPlot","console","log","x","y_bytes","y_bytes_text","y_functions","y_functions_text","commits","commit","date","d","Date","setUTCSeconds","entry","k","push","y","text","mode","fill","visible","legend","xaxis","showgrid","yaxis","ProgressPanel","historicData","setHistoricData","latestData","setLatestData","fetch","then","resp","json","MainPage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39eec6aa.chunk.js","sourcesContent":["import React from 'react'\n\nexport const RenderIf = ({condition, children}) => {\n  return condition ? <>{children}</> : null\n}\n","import React from 'react'\n\nimport './MenuItem.scss'\n\nexport const MenuItem = ({item, active, onClick}) => {\n\n  const activeClass = active ? 'active' : ''\n\n  return (\n    <div\n      className={\"menu-item \" + activeClass}\n      onClick={onClick}>\n      {item}\n    </div>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\n\nimport './GitHub.scss'\n\nexport const GitHub = ({\n  url\n}) => {\n  return (\n    <div className=\"github\">\n      <a href={url} alt=\"Check it out on GitHub\" target=\"_blank\" rel=\"noreferrer\">\n      <span className=\"github-icon\"><FontAwesomeIcon icon={faGithub} /></span>\n      <span className=\"github-text\">GitHub</span>\n      </a>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport {MenuItem} from '../MenuItem'\nimport {GitHub} from '../GitHub'\n\nimport './Menu.scss'\n\nexport const Menu = ({\n  activePanelHook\n}) => {\n\n  const [activePanel, setActivePanel] = activePanelHook\n\n  return (\n    <div className='menu'>\n      <div className='menu-items-left'>\n        <MenuItem item={'progress'} active={activePanel === 'progress'} onClick={() =>setActivePanel('progress')} />\n        <MenuItem item={'faq'} active={activePanel === 'faq'} onClick={() =>setActivePanel('faq')} />\n      </div>\n      <div className='menu-items-right'>\n        <GitHub url={\"https://github.com/mkst/conker\"}/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport '../Panels.scss'\n\nexport const InfoPanel = () => {\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-headline\">\n        Welcome to the Conker&apos;s Bad Fur Day decompilation website!\n      </div>\n      <div className=\"panel-text\">\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport '../Panels.scss'\nimport './Faq.scss'\n\nexport const FaqPanel = () => {\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-headline\">\n        Frequently Asked Questions:\n      </div>\n\n      <div className=\"question\">\n        Q) When is it going to be done?\n      </div>\n      <div className=\"answer\">\n        A) ... these things take years. Right now it&apos;s just me - at the current rate of progress it&apos;ll be done around 2030!\n      </div>\n\n      <div className=\"question\">\n        Q) What about Twelve Tails (12T)? Have you uncovered anything cool yet?\n      </div>\n      <div className=\"answer\">\n        A) There&apos;s very little in terms of 12T content left in BFD (see <a href=\"https://tcrf.net/Conker%27s_Bad_Fur_Day\" target=\"_blank\" rel=\"noreferrer\">TCRF</a>). in terms of code - probably a lot has been re-used/re-cycled.\n      </div>\n\n      <div className=\"question\">\n        Q) Ok, then what about the DEBUG and ECTS ROMs?\n      </div>\n      <div className=\"answer\">\n        A) The DEBUG ROM is very similar in terms of layout to the retail ROMs, I expect much of the code/assets are the same too. ECTS ROM does not have the same layout and so needs further investigation.\n      </div>\n\n      <div className=\"question\">\n        Q) I&apos;m in. What can I do to help?\n      </div>\n      <div className=\"answer\">\n        A) Great! Checkout the <a href=\"https://github.com/mkst/conker/wiki/Contributing\" target=\"_blank\" rel=\"noreferrer\">Contributing</a> page on the <a href=\"https://github.com/mkst/conker/wiki\" target=\"_blank\" rel=\"noreferrer\">Wiki</a> or find me on Discord (mkst#4741).\n      </div>\n\n      <div className=\"question\">\n        Q) Damn, this website is horrible.\n      </div>\n      <div className=\"answer\">\n        A) Not really a question... But yeah, feel free to <a href=\"https://github.com/mkst/conker-website\" target=\"_blank\" rel=\"noreferrer\">improve it!</a>\n      </div>\n\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport Plot from 'react-plotly.js'\n\nimport './CurrentProgress.scss'\n\nexport const CurrentProgressPlot = ({\n  data,\n  version,\n  section\n}) => {\n\n  const [plotData, setPlotData] = useState(null)\n  const [plot, setPlot] = useState(null)\n\n  useEffect(() => {\n    if ((data === null) || (data == null)) {\n      return null\n    }\n    if (Object.keys(data).indexOf(\"progress\") === -1) {\n      return null\n    }\n    for (var i = 0; i < data.progress.length; i++) {\n        if (data.progress[i].version === version) {\n          const sections = data.progress[i].sections\n\n          for (var j = 0; j < sections.length; j++) {\n            if (sections[j].section === section) {\n              setPlotData({\n                c: sections[j].c,\n                c_functions: sections[j].c_functions,\n                percent: sections[j].percent,\n                section: sections[j].section,\n                total: sections[j].total,\n                total_functions: sections[j].total_functions\n              })\n              break\n            }\n          }\n        }\n    }\n  }, [data, version, section])\n\n  useEffect(() => {\n    if (plotData === null) {\n      return;\n    }\n    setPlot(<Plot\n      data={[{\n        title: plotData.percent.toFixed(2) + '<br>%',\n        values: [plotData.c, plotData.total - plotData.c],\n        labels: ['C', 'ASM'],\n        type: 'pie',\n        hole: 0.66,\n        textinfo: 'none',\n        marker: {\n          colors: ['#ffde08', 'rgba(0,0,0,0.1)']\n        },\n        domain: {\n          row: 0,\n          column: 0\n        },\n        direction: 'clockwise',\n        sort: false,\n        name: 'bytes'\n      },\n      {\n        title: plotData.c_functions + '<br>of<br>' + plotData.total_functions,\n        values: [plotData.c_functions, plotData.total_functions - plotData.c_functions],\n        labels: ['C', 'ASM'],\n        type: 'pie',\n        hole: 0.66,\n        textinfo: 'none',\n        marker: {\n          colors: ['#ffde08', 'rgba(0,0,0,0.1)']\n        },\n        domain: {\n          row: 0,\n          column: 1\n        },\n        direction: 'clockwise',\n        sort: false,\n        name: 'functions'\n      }]}\n      layout={{\n        font: {\n          family : 'Lithos Black Bold',\n          size: 20,\n          color: '#111'\n        },\n        grid: {rows: 1, columns: 2},\n        margin: {'t': 10, 'b': '15', 'l': 0, 'r': 0},\n        showlegend: false,\n        paper_bgcolor: 'rgba(0,0,0,0)',\n        plot_bgcolor: 'rgba(0,0,0,0)',\n        hovermode: false,\n      }}\n      config={{displayModeBar: false, responsive: true}}\n      style={{width: \"100%\", height: \"100%\"}}\n    />)\n  }, [plotData])\n\n  return <div className=\"current-progress\">\n    {plot}\n  </div>\n}\n","import React, {useState, useEffect} from 'react'\nimport Plot from 'react-plotly.js'\n\nimport './HistoricProgress.scss'\n\nexport const HistoricProgressPlot = ({\n  data,\n  version,\n  section\n}) => {\n\n  const [plotData, setPlotData] = useState(null)\n  const [plot, setPlot] = useState(null)\n\n  useEffect(() => {\n    if ((data === null) || (data == null)) {\n      return null\n    }\n    console.log(data)\n    if (Object.keys(data).indexOf(\"commits\") === -1) {\n      return null\n    }\n\n    const x = []\n    const y_bytes = []\n    const y_bytes_text =[]\n    const y_functions = []\n    const y_functions_text = []\n\n    for(var i = 0; i < data.commits.length; i++) {\n      const commit = data.commits[i]\n      const date = commit.date\n      const d = new Date(0);\n      d.setUTCSeconds(date);\n      // const hash = entry['hash'] // what to do with this?\n      const progress = commit.progress\n      for (var j = 0; j < progress.length; j++) {\n        const entry = progress[j]\n        if (entry.version === version) {\n          for (var k = 0; k < entry.sections.length; k++) {\n            if (entry.sections[k].section == section) {\n              const c = entry.sections[k].c\n              const total = entry.sections[k].total\n              const c_functions = entry.sections[k].c_functions\n              const total_functions = entry.sections[k].total_functions\n              const percent = entry.sections[k].percent\n              // fixme later\n              x.push(d)\n              y_bytes.push(percent)\n              y_bytes_text.push(percent.toFixed(2) + \"%\")\n              y_functions.push(c_functions / total_functions * 100)\n              y_functions_text.push(c_functions + '/' + total_functions)\n            }\n          }\n        }\n      }\n    }\n    console.log(x, y_bytes)\n    setPlotData({\n      x: x,\n      y_bytes: y_bytes,\n      y_bytes_text: y_bytes_text,\n      y_functions: y_functions,\n      y_functions_text: y_functions_text,\n    })\n  }, [data, version, section])\n\n  useEffect(() => {\n    if (plotData === null) {\n      return;\n    }\n    setPlot(<Plot\n      data={[{\n          x: plotData.x,\n          y: plotData.y_bytes,\n          text: plotData.y_bytes_text,\n          name: 'bytes',\n          mode: 'lines',\n          fill: 'tozeroy',\n          marker: {\n            color: '#382506',\n          },\n        },{\n          x: plotData.x,\n          y: plotData.y_functions,\n          text: plotData.y_functions_text,\n          name: 'functions',\n          mode: 'lines',\n          fill: 'tozeroy',\n          visible: 'legendonly',\n          marker: {\n            color: '#6a4108',\n          },\n        },\n      ]}\n      layout={{\n        font: {\n          family: 'Lithos Black Bold',\n          color: '#111'\n        },\n        margin: {'t': 20, 'b': 40, 'l': 40, 'r': 40},\n        showlegend: true,\n        legend: {'orientation': 'h'},\n        xaxis: {\n          showgrid: false,\n        },\n        yaxis: {\n          title: 'Percentage Complete',\n          showgrid: false,\n        },\n        paper_bgcolor: 'rgba(0,0,0,0)',\n        plot_bgcolor: 'rgba(0,0,0,0)',\n      }}\n      config={{displayModeBar: false, responsive: true}}\n      style={{width: '100%', height: '100%'}}\n    />)\n  }, [plotData])\n\n  return <div className='historic-progress'>\n    {plot}\n  </div>\n}\n","import React, {useState, useEffect} from 'react'\n\nimport {CurrentProgressPlot} from '../../plots/CurrentProgress'\nimport {HistoricProgressPlot} from '../../plots/HistoricProgress'\n\nimport '../Panels.scss'\nimport './Progress.scss'\n\nexport const ProgressPanel = () => {\n\n  const [historicData, setHistoricData] = useState(null)\n  const [latestData, setLatestData] = useState(null)\n\n  const version = 'us'\n  const section = 'game'\n\n  useEffect(() => {\n    fetch('/commits.json')\n    .then(resp => resp.json())\n    .then(setHistoricData)\n  }, [setHistoricData])\n\n  useEffect(() => {\n    fetch('/latest.json')\n    .then(resp => resp.json())\n    .then(setLatestData)\n  }, [setLatestData])\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-headline\">\n        CBFD Decomp Current Progress:\n      </div>\n      <CurrentProgressPlot data={latestData} version={version} section={section} />\n\n      <div className=\"panel-headline\">\n        Historic Progress:\n      </div>\n      <HistoricProgressPlot data={historicData} version={version} section={section} />\n    </div>\n  )\n}\n","import React, {useState} from 'react'\n\nimport \"./Main.scss\"\n\nimport {RenderIf} from '../../components/RenderIf'\nimport {Menu} from '../../components/Menu'\n\nimport {InfoPanel} from '../../panels/Info'\nimport {FaqPanel} from '../../panels/Faq'\nimport {ProgressPanel} from '../../panels/Progress'\n\nexport const MainPage = () => {\n\n  const [activePanel, setActivePanel] = useState('progress')\n\n  return (\n    <div className='main'>\n      <Menu activePanelHook={[activePanel, setActivePanel] } />\n\n      <RenderIf condition={activePanel === 'progress'}>\n        <ProgressPanel />\n      </RenderIf>\n      <RenderIf condition={activePanel === 'info'}>\n        <InfoPanel />\n      </RenderIf>\n      <RenderIf condition={activePanel === 'faq'}>\n        <FaqPanel />\n      </RenderIf>\n\n    </div>\n  )\n}\n","import React from 'react'\n\nimport {MainPage} from './pages/Main'\n\nimport './App.scss'\n\nfunction App() {\n  // TODO: ReactRouter\n  return (\n    <div className=\"app\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}