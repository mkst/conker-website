{"version":3,"sources":["components/RenderIf/index.js","components/MenuItem/index.js","components/GitHub/index.js","components/Menu/index.js","panels/Info/index.js","panels/Faq/index.js","plots/CurrentProgress/index.js","plots/HistoricProgress/index.js","panels/Progress/index.js","pages/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["RenderIf","condition","children","MenuItem","item","active","onClick","activeClass","className","GitHub","url","href","alt","target","rel","icon","faGithub","Menu","activePanelHook","activePanel","setActivePanel","InfoPanel","FaqPanel","CurrentProgressPlot","data","Object","keys","indexOf","lastData","summary","length","c_size","total","c_count","total_functions","percent","title","toFixed","values","labels","type","hole","textinfo","marker","colors","domain","row","column","direction","sort","name","layout","font","family","size","color","grid","rows","columns","margin","showlegend","paper_bgcolor","plot_bgcolor","hovermode","config","displayModeBar","responsive","style","width","height","HistoricProgressPlot","x","y_bytes","y_bytes_text","y_functions","y_functions_text","i","entry","date","d","Date","setUTCSeconds","j","summary_entry","c","c_functions","push","pct","y","text","mode","fill","visible","legend","xaxis","showgrid","yaxis","ProgressPanel","require","MainPage","useState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0086062.chunk.js","sourcesContent":["import React from 'react'\n\nexport const RenderIf = ({condition, children}) => {\n  return condition ? <>{children}</> : null\n}\n","import React from 'react'\n\nimport './MenuItem.scss'\n\nexport const MenuItem = ({item, active, onClick}) => {\n\n  const activeClass = active ? 'active' : ''\n\n  return (\n    <div\n      className={\"menu-item \" + activeClass}\n      onClick={onClick}>\n      {item}\n    </div>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\"\n\nimport './GitHub.scss'\n\nexport const GitHub = ({\n  url\n}) => {\n  return (\n    <div className=\"github\">\n      <a href={url} alt=\"Check it out on GitHub\" target=\"_blank\" rel=\"noreferrer\">\n      <span className=\"github-icon\"><FontAwesomeIcon icon={faGithub} /></span>\n      <span className=\"github-text\">GitHub</span>\n      </a>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport {MenuItem} from '../MenuItem'\nimport {GitHub} from '../GitHub'\n\nimport './Menu.scss'\n\nexport const Menu = ({\n  activePanelHook\n}) => {\n\n  const [activePanel, setActivePanel] = activePanelHook\n\n  return (\n    <div className='menu'>\n      <div className='menu-items-left'>\n        <MenuItem item={'progress'} active={activePanel === 'progress'} onClick={() =>setActivePanel('progress')} />\n        <MenuItem item={'faq'} active={activePanel === 'faq'} onClick={() =>setActivePanel('faq')} />\n      </div>\n      <div className='menu-items-right'>\n        <GitHub url={\"https://github.com/mkst/conker\"}/>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport '../Panels.scss'\n\nexport const InfoPanel = () => {\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-headline\">\n        Welcome to the Conker&apos;s Bad Fur Day decompilation website!\n      </div>\n      <div className=\"panel-text\">\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport '../Panels.scss'\nimport './Faq.scss'\n\nexport const FaqPanel = () => {\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-headline\">\n        Frequently Asked Questions:\n      </div>\n\n      <div className=\"question\">\n        Q) When is it going to be done?\n      </div>\n      <div className=\"answer\">\n        A) ... these things take years. Right now it&apos;s just me - at the current rate of progress it&apos;ll be done around 2030!\n      </div>\n\n      <div className=\"question\">\n        Q) What about Twelve Tails (12T)? Have you uncovered anything cool yet?\n      </div>\n      <div className=\"answer\">\n        A) There&apos;s very little in terms of 12T content left in BFD (see <a href=\"https://tcrf.net/Conker%27s_Bad_Fur_Day\" target=\"_blank\" rel=\"noreferrer\">TCRF</a>). in terms of code - probably a lot has been re-used/re-cycled.\n      </div>\n\n      <div className=\"question\">\n        Q) Ok, then what about the DEBUG and ECTS ROMs?\n      </div>\n      <div className=\"answer\">\n        A) The DEBUG ROM is very similar in terms of layout to the retail ROMs, I expect much of the code/assets are the same too. ECTS ROM does not have the same layout and so needs further investigation.\n      </div>\n\n      <div className=\"question\">\n        Q) I&apos;m in. What can I do to help?\n      </div>\n      <div className=\"answer\">\n        A) Great! Checkout the <a href=\"https://github.com/mkst/conker/wiki/Contributing\" target=\"_blank\" rel=\"noreferrer\">Contributing</a> page on the <a href=\"https://github.com/mkst/conker/wiki\" target=\"_blank\" rel=\"noreferrer\">Wiki</a> or find me on Discord (mkst#4741).\n      </div>\n\n      <div className=\"question\">\n        Q) Damn, this website is horrible.\n      </div>\n      <div className=\"answer\">\n        A) Not really a question... But yeah, feel free to improve it!\n      </div>\n\n    </div>\n  )\n}\n","import React from 'react'\nimport Plot from 'react-plotly.js'\n\nimport './CurrentProgress.scss'\n\nexport const CurrentProgressPlot = ({\n  data\n}) => {\n\n  if ((data === null) || (data == null)) {\n    return null\n  }\n\n  if (Object.keys(data).indexOf(\"summary\") === -1) {\n    return null\n  }\n\n  const lastData = data.summary[data.summary.length - 1].summary[0]\n\n  const c_size = lastData[\"c\"]\n  const total = lastData[\"total\"]\n\n  const c_count = lastData[\"c_functions\"]\n  const total_functions = lastData[\"total_functions\"]\n\n  const percent = c_size / total * 100\n\n  return <div className=\"current-progress\">\n    <Plot\n      data={[{\n        title: percent.toFixed(2) + '<br>%',\n        values: [c_size, total - c_size],\n        labels: ['C', 'ASM'],\n        type: 'pie',\n        hole: 0.66,\n        textinfo: 'none',\n        marker: {\n          colors: ['#ffde08', 'rgba(0,0,0,0.1)']\n        },\n        domain: {\n          row: 0,\n          column: 0\n        },\n        direction: 'clockwise',\n        sort: false,\n        name: 'bytes'\n      },\n      {\n        title: c_count + '<br>of<br>' + total_functions,\n        values: [c_count, total_functions - c_count],\n        labels: ['C', 'ASM'],\n        type: 'pie',\n        hole: 0.66,\n        textinfo: 'none',\n        marker: {\n          colors: ['#ffde08', 'rgba(0,0,0,0.1)']\n        },\n        domain: {\n          row: 0,\n          column: 1\n        },\n        direction: 'clockwise',\n        sort: false,\n        name: 'functions'\n      }]}\n      layout={{\n        font: {\n          family : 'Lithos Black Bold',\n          size: 20,\n          color: '#111'\n        },\n        grid: {rows: 1, columns: 2},\n        margin: {'t': 10, 'b': '15', 'l': 0, 'r': 0},\n        showlegend: false,\n        paper_bgcolor: 'rgba(0,0,0,0)',\n        plot_bgcolor: 'rgba(0,0,0,0)',\n        hovermode: false,\n      }}\n      config={{displayModeBar: false, responsive: true}}\n      style={{width: \"100%\", height: \"100%\"}}\n    />\n  </div>\n}\n","import React from 'react'\nimport Plot from 'react-plotly.js'\n\nimport './HistoricProgress.scss'\n\nexport const HistoricProgressPlot = ({\n  data\n}) => {\n\n  if ((data === null) || (data == null)) {\n    return null\n  }\n\n  if (Object.keys(data).indexOf('summary') === -1) {\n    return null\n  }\n\n  const x = []\n  const y_bytes = []\n  const y_bytes_text =[]\n  const y_functions = []\n  const y_functions_text = []\n\n  for(var i = 0; i < data.summary.length; i++) {\n    const entry = data.summary[i]\n    const date = entry['date']\n    const d = new Date(0);\n    d.setUTCSeconds(date);\n    // const hash = entry['hash'] // what to do with this?\n    const summary = entry['summary']\n    for (var j = 0; j < summary.length; j++) {\n      const summary_entry = summary[j]\n      // const version = summary_entry['version']\n      const c = summary_entry['c']\n      const total = summary_entry['total']\n      const c_functions = summary_entry['c_functions']\n      const total_functions = summary_entry['total_functions']\n      // fixme later\n      x.push(d)\n      const pct = c / total * 100\n      y_bytes.push(pct)\n      y_bytes_text.push(pct.toFixed(2) + \"%\")\n      y_functions.push(c_functions / total_functions * 100)\n      y_functions_text.push(c_functions + '/' + total_functions)\n    }\n  }\n\n  return <div className='historic-progress'>\n    <Plot\n      data={[{\n          x: x,\n          y: y_bytes,\n          text: y_bytes_text,\n          name: 'bytes',\n          mode: 'lines',\n          fill: 'tozeroy',\n          marker: {\n            color: '#382506',\n          },\n        },{\n          x: x,\n          y: y_functions,\n          text: y_functions_text,\n          name: 'functions',\n          mode: 'lines',\n          fill: 'tozeroy',\n          visible: 'legendonly',\n          marker: {\n            color: '#6a4108',\n          },\n        },\n      ]}\n      layout={{\n        font: {\n          family: 'Lithos Black Bold',\n          color: '#111'\n        },\n        margin: {'t': 20, 'b': 40, 'l': 40, 'r': 40},\n        showlegend: true,\n        legend: {'orientation': 'h'},\n        xaxis: {\n          showgrid: false,\n        },\n        yaxis: {\n          title: 'Percentage Complete',\n          showgrid: false,\n        },\n        paper_bgcolor: 'rgba(0,0,0,0)',\n        plot_bgcolor: 'rgba(0,0,0,0)',\n      }}\n      config={{displayModeBar: false, responsive: true}}\n      style={{width: '100%', height: '100%'}}\n    />\n    </div>\n}\n","import React from 'react'\n\nimport {CurrentProgressPlot} from '../../plots/CurrentProgress'\nimport {HistoricProgressPlot} from '../../plots/HistoricProgress'\n\nimport '../Panels.scss'\nimport './Progress.scss'\n\nexport const ProgressPanel = () => {\n\n  const summary = require('../../assets/data/summary.json')\n\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-headline\">\n        CBFD Decomp Current Progress:\n      </div>\n      <CurrentProgressPlot data={summary} />\n\n      <div className=\"panel-headline\">\n        Historic Progress:\n      </div>\n      <HistoricProgressPlot data={summary} />\n    </div>\n  )\n}\n","import React, {useState} from 'react'\n\nimport \"./Main.scss\"\n\nimport {RenderIf} from '../../components/RenderIf'\nimport {Menu} from '../../components/Menu'\n\nimport {InfoPanel} from '../../panels/Info'\nimport {FaqPanel} from '../../panels/Faq'\nimport {ProgressPanel} from '../../panels/Progress'\n\nexport const MainPage = () => {\n\n  const [activePanel, setActivePanel] = useState('progress')\n\n  return (\n    <div className='main'>\n      <Menu activePanelHook={[activePanel, setActivePanel] } />\n\n      <RenderIf condition={activePanel === 'progress'}>\n        <ProgressPanel />\n      </RenderIf>\n      <RenderIf condition={activePanel === 'info'}>\n        <InfoPanel />\n      </RenderIf>\n      <RenderIf condition={activePanel === 'faq'}>\n        <FaqPanel />\n      </RenderIf>\n\n    </div>\n  )\n}\n","import React from 'react'\n\nimport {MainPage} from './pages/Main'\n\nimport './App.scss'\n\nfunction App() {\n  // TODO: ReactRouter\n  return (\n    <div className=\"app\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}